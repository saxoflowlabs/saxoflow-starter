name: SaxoFlow Full Test Suite

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ "3.9", "3.10", "3.11" ]

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3

      - name: 🟩 [Debug] After checkout
        run: echo "✅ Checked out repository"

      - name: 🐍 Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: 🟩 [Debug] After Python setup
        run: echo "✅ Python ${{ matrix.python-version }} set up"

      - name: 🛠 Install system dependencies
        run: |
          echo "🟩 Installing system dependencies..."
          sudo apt-get update
          sudo apt-get install -y yosys iverilog gtkwave make
          pip install symbiyosys

      - name: 🟩 [Debug] After system dependencies
        run: echo "✅ System dependencies installed"

      - name: 🧪 Python Environment + Editable Install
        run: |
          echo "🟩 Setting up Python environment and editable install..."
          python3 -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -e .
          pip install pytest flake8 coverage questionary rich

      - name: 🟩 [Debug] After editable install
        run: echo "✅ Python environment + editable install completed"

      - name: 🧹 Lint Python Code
        run: |
          echo "🟩 Running lint..."
          source .venv/bin/activate
          flake8 saxoflow/ saxoflow_agenticai/ --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 saxoflow/ saxoflow_agenticai/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: 🟩 [Debug] After lint
        run: echo "✅ Lint completed"

      - name: 🧪 Run ALL Unit Tests
        run: |
          echo "🟩 Running unit tests..."
          source .venv/bin/activate
          pytest tests/ --tb=short -v --maxfail=3

      - name: 🟩 [Debug] After unit tests
        run: echo "✅ Unit tests completed"

      - name: 📊 Coverage Report (fail if <60%)
        run: |
          echo "🟩 Running coverage..."
          source .venv/bin/activate
          coverage run -m pytest tests/
          coverage report --fail-under=60 -m

      - name: 🟩 [Debug] After coverage
        run: echo "✅ Coverage report completed"
