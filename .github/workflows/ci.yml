name: SaxoFlow Full Test Suite

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  build-tools:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache EDA Tools
        id: eda-cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.local
            ~/.cache
          key: eda-tools-v1-${{ runner.os }}-${{ hashFiles('scripts/recipes/*.sh') }}
          restore-keys: |
            eda-tools-v1-${{ runner.os }}-

      - name: Install EDA Tools and System Dependencies (if needed)
        if: steps.eda-cache.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y make git python3 python3-pip iverilog gtkwave openfpgaloader klayout magic netgen
          bash scripts/recipes/yosys.sh
          bash scripts/recipes/verilator.sh
          bash scripts/recipes/symbiyosys.sh
          bash scripts/recipes/nextpnr.sh
          bash scripts/recipes/openroad.sh

      - name: Print EDA tool versions
        run: |
          ~/.local/bin/yosys --version || true
          ~/.local/bin/iverilog -V || true
          ~/.local/bin/gtkwave --version || true

  test:
    needs: build-tools
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v3

      - name: Restore EDA Tools Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.local
            ~/.cache
          key: eda-tools-v1-${{ runner.os }}-${{ hashFiles('scripts/recipes/*.sh') }}
          restore-keys: |
            eda-tools-v1-${{ runner.os }}-

      - name: Add EDA tools to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Restore pip wheels cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-cache-v1-${{ runner.os }}-py${{ matrix.python-version }}-${{ hashFiles('pyproject.toml', 'requirements.txt', 'setup.py') }}
          restore-keys: |
            pip-cache-v1-${{ runner.os }}-py${{ matrix.python-version }}-

      - name: Restore Python venv cache
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-v1-${{ runner.os }}-py${{ matrix.python-version }}-${{ hashFiles('pyproject.toml', 'requirements.txt', 'setup.py') }}
          restore-keys: |
            venv-v1-${{ runner.os }}-py${{ matrix.python-version }}-

      - name: Python Environment + Editable Install
        shell: bash
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -e . -i https://pypi.org/simple
          pip install pytest flake8 coverage questionary rich -i https://pypi.org/simple

      - name: Print Python and pip versions
        shell: bash
        run: |
          source .venv/bin/activate
          python --version
          pip --version

      - name: Lint Python Code
        shell: bash
        run: |
          source .venv/bin/activate
          # Fail-fast lint (syntax/undefined names)
          flake8 saxoflow/ saxoflow_agenticai/ cool_cli/ --count --select=E9,F63,F7,F82 --show-source --statistics
          # Report-only lint (style/complexity); does not fail build
          flake8 saxoflow/ saxoflow_agenticai/ cool_cli/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run Unit Tests with Coverage
        shell: bash
        run: |
          source .venv/bin/activate
          # Single run under coverage (saves CI time vs. running pytest twice)
          coverage run -m pytest tests/ --tb=short -v --maxfail=3 | tee test-output.log
          coverage report --fail-under=60 -m
          coverage xml

      - name: Upload coverage and logs if failed
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: logs-and-coverage-py${{ matrix.python-version }}
          path: |
            test-output.log
            coverage.xml
            .coverage

      - name: Print EDA tool versions (again, for test log)
        run: |
          yosys --version || true
          iverilog -V || true
          gtkwave --version || true
          nextpnr-ice40 --version || true
          nextpnr-xc7 --version || true
          nextpnr-ecp5 --version || true
          openroad --version || true
